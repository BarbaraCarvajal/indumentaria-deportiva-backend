import _defineProperty from "@babel/runtime-corejs3/helpers/esm/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
import { specificationObj as JSONSchemaDraft7Specification } from '@swagger-api/apidom-ns-json-schema-draft-7';
import FallbackVisitor from "./visitors/FallbackVisitor.js";
import SpecificationExtensionVisitor from "./visitors/SpecificationExtensionVisitor.js";
/**
 * AsyncApi >= 2.0.0 <=2.6.0 specification elements.
 */
import AsyncApi2Visitor from "./visitors/async-api-2/index.js";
import AsyncApiVersionVisitor from "./visitors/async-api-2/AsyncApiVersionVisitor.js";
import IdentifierVisitor from "./visitors/async-api-2/IdentifierVisitor.js";
import InfoVisitor from "./visitors/async-api-2/info/index.js";
import InfoTitleVisitor from "./visitors/async-api-2/info/TitleVisitor.js";
import InfoDescriptionVisitor from "./visitors/async-api-2/info/DescriptionVisitor.js";
import InfoTermsOfServiceVisitor from "./visitors/async-api-2/info/TermsOfServiceVisitor.js";
import InfoVersionVisitor from "./visitors/async-api-2/info/VersionVisitor.js";
import ContactVisitor from "./visitors/async-api-2/contact/index.js";
import ContactNameVisitor from "./visitors/async-api-2/contact/NameVisitor.js";
import ContactUrlVisitor from "./visitors/async-api-2/contact/UrlVisitor.js";
import ContactEmailVisitor from "./visitors/async-api-2/contact/EmailVisitor.js";
import CorrelationIDVisitor from "./visitors/async-api-2/correlation-id/index.js";
import CorrelationIDDescriptionVisitor from "./visitors/async-api-2/correlation-id/DescriptionVisitor.js";
import CorrelationIDLocationVisitor from "./visitors/async-api-2/correlation-id/LocationVisitor.js";
import DefaultContentTypeVisitor from "./visitors/async-api-2/DefaultContentTypeVisitor.js";
import LicenseVisitor from "./visitors/async-api-2/license/index.js";
import LicenseNameVisitor from "./visitors/async-api-2/license/NameVisitor.js";
import LicenseUrlVisitor from "./visitors/async-api-2/license/UrlVisitor.js";
import OAuthFlowsVisitor from "./visitors/async-api-2/oauth-flows/index.js";
import OAuthFlowVisitor from "./visitors/async-api-2/oauth-flow/index.js";
import OAuthFlowAuthorizationUrlVisitor from "./visitors/async-api-2/oauth-flow/AuthorizationUrlVisitor.js";
import OAuthFlowTokenUrlVisitor from "./visitors/async-api-2/oauth-flow/TokenUrlVisitor.js";
import OAuthFlowRefreshUrlVisitor from "./visitors/async-api-2/oauth-flow/RefreshUrlVisitor.js";
import OAuthFlowScopesVisitor from "./visitors/async-api-2/oauth-flow/ScopesVisitor.js";
import ServersVisitor from "./visitors/async-api-2/servers/index.js";
import ServerVisitor from "./visitors/async-api-2/server/index.js";
import ServerUrlVisitor from "./visitors/async-api-2/server/UrlVisitor.js";
import ServerProtocolVisitor from "./visitors/async-api-2/server/ProtocolVisitor.js";
import ServerProtocolVersionVisitor from "./visitors/async-api-2/server/ProtocolVersionVisitor.js";
import ServerDescriptionVisitor from "./visitors/async-api-2/server/DescriptionVisitor.js";
import ServerBindingsVisitor_ from "./visitors/async-api-2/server/BindingsVisitor.js";
import ServerVariablesVisitor from "./visitors/async-api-2/server/VariablesVisitor.js";
import ServerSecurityVisitor from "./visitors/async-api-2/server/SecurityVisitor.js";
import ServerVariableVisitor from "./visitors/async-api-2/server-variable/index.js";
import ServerVariableEnumVisitor from "./visitors/async-api-2/server-variable/EnumVisitor.js";
import ServerVariableDefaultVisitor from "./visitors/async-api-2/server-variable/DefaultVisitor.js";
import ServerVariableDescriptionVisitor from "./visitors/async-api-2/server-variable/DescriptionVisitor.js";
import ServerVariableExamplesVisitor from "./visitors/async-api-2/server-variable/ExamplesVisitor.js";
import ServerBindingsVisitor from "./visitors/async-api-2/server-bindings/index.js";
import SecuritySchemeVisitor from "./visitors/async-api-2/security-scheme/index.js";
import SecuritySchemeTypeVisitor from "./visitors/async-api-2/security-scheme/TypeVisitor.js";
import SecuritySchemeDescriptionVisitor from "./visitors/async-api-2/security-scheme/DescriptionVisitor.js";
import SecuritySchemeNameVisitor from "./visitors/async-api-2/security-scheme/NameVisitor.js";
import SecuritySchemeInVisitor from "./visitors/async-api-2/security-scheme/InVisitor.js";
import SecuritySchemeSchemeVisitor from "./visitors/async-api-2/security-scheme/SchemeVisitor.js";
import SecuritySchemeBearerFormatVisitor from "./visitors/async-api-2/security-scheme/BearerFormatVisitor.js";
import SecuritySchemeOpenIdConnectUrlVisitor from "./visitors/async-api-2/security-scheme/OpenIdConnectUrlVisitor.js";
import SecurityRequirementVisitor from "./visitors/async-api-2/security-requirement/index.js";
import ReferenceVisitor from "./visitors/async-api-2/reference/index.js";
import Reference$RefVisitor from "./visitors/async-api-2/reference/$RefVisitor.js";
import SchemaVisitor from "./visitors/async-api-2/schema/index.js";
import SchemaOrReferenceVisitor from "./visitors/async-api-2/schema/SchemaOrReferenceVisitor.js";
import SchemaDeprecatedVisitor from "./visitors/async-api-2/schema/DeprecatedVisitor.js";
import SchemaDiscriminatorVisitor from "./visitors/async-api-2/schema/DiscriminatorVisitor.js";
import SchemaAllOfVisitor from "./visitors/async-api-2/schema/AllOfVisitor.js";
import SchemaAnyOfVisitor from "./visitors/async-api-2/schema/AnyOfVisitor.js";
import SchemaOneOfVisitor from "./visitors/async-api-2/schema/OneOfVisitor.js";
import SchemaDefinitionsVisitor from "./visitors/async-api-2/schema/DefinitionsVisitor.js";
import SchemaDependenciesVisitor from "./visitors/async-api-2/schema/DependenciesVisitor.js";
import SchemaItemsVisitor from "./visitors/async-api-2/schema/ItemsVisitor.js";
import SchemaPatternPropertiesVisitor from "./visitors/async-api-2/schema/PatternPropertiesVisitor.js";
import SchemaPropertiesVisitor from "./visitors/async-api-2/schema/PropertiesVisitor.js";
import schemaInheritedFixedFields from "./visitors/async-api-2/schema/inherited-fixed-fields.js";
import ParametersVisitor from "./visitors/async-api-2/parameters/index.js";
import ParameterVisitor from "./visitors/async-api-2/parameter/index.js";
import ParameterDescriptionVisitor from "./visitors/async-api-2/parameter/DescriptionVisitor.js";
import ParameterLocationVisitor from "./visitors/async-api-2/parameter/LocationVisitor.js";
import ParameterSchemaVisitor from "./visitors/async-api-2/parameter/SchemaVisitor.js";
import ExternalDocumentationVisitor from "./visitors/async-api-2/external-documentation/index.js";
import ExternalDocumentationDescriptionVisitor from "./visitors/async-api-2/external-documentation/DescriptionVisitor.js";
import ExternalDocumentationUrlVisitor from "./visitors/async-api-2/external-documentation/UrlVisitor.js";
import ComponentsVisitor from "./visitors/async-api-2/components/index.js";
import ComponentsSchemasVisitor from "./visitors/async-api-2/components/SchemasVisitor.js";
import ComponentsServersVisitor from "./visitors/async-api-2/components/ServersVisitor.js";
import ComponentsServerVariablesVisitor from "./visitors/async-api-2/components/ServerVariablesVisitor.js";
import ComponentsChannelsVisitor from "./visitors/async-api-2/components/ChannelsVisitor.js";
import ComponentsMessagesVisitor from "./visitors/async-api-2/components/MessagesVisitor.js";
import ComponentsSecuritySchemesVisitor from "./visitors/async-api-2/components/SecuritySchemesVisitor.js";
import ComponentsParametersVisitor from "./visitors/async-api-2/components/ParametersVisitor.js";
import ComponentsCorrelationIdsVisitor from "./visitors/async-api-2/components/CorrelationIdsVisitor.js";
import ComponentsOperationTraitsVisitor from "./visitors/async-api-2/components/OperationTraitsVisitor.js";
import ComponentsMessageTraitsVisitor from "./visitors/async-api-2/components/MessageTraitsVisitor.js";
import ComponentsServerBindingsVisitor from "./visitors/async-api-2/components/ServerBindingsVisitor.js";
import ComponentsChannelBindingsVisitor from "./visitors/async-api-2/components/ChannelBindingsVisitor.js";
import ComponentsOperationBindingsVisitor from "./visitors/async-api-2/components/OperationBindingsVisitor.js";
import ComponentsMessageBindingsVisitor from "./visitors/async-api-2/components/MessageBindingsVisitor.js";
import OperationVisitor from "./visitors/async-api-2/operation/index.js";
import OperationOperationIdVisitor from "./visitors/async-api-2/operation/OperationIdVisitor.js";
import OperationSummaryVisitor from "./visitors/async-api-2/operation/SummaryVisitor.js";
import OperationDescriptionVisitor from "./visitors/async-api-2/operation/DescriptionVisitor.js";
import OperationSecurityVisitor from "./visitors/async-api-2/operation/SecurityVisitor.js";
import OperationBindingsVisitor_ from "./visitors/async-api-2/operation/BindingsVisitor.js";
import OperationTraitsVisitor from "./visitors/async-api-2/operation/TraitsVisitor.js";
import OperationMessageVisitor from "./visitors/async-api-2/operation/MessageVisitor.js";
import TagsVisitor from "./visitors/async-api-2/tags/index.js";
import TagVisitor from "./visitors/async-api-2/tag/index.js";
import TagNameVisitor from "./visitors/async-api-2/tag/NameVisitor.js";
import TagDescriptionVisitor from "./visitors/async-api-2/tag/DescriptionVisitor.js";
import ChannelsVisitor from "./visitors/async-api-2/channels/index.js";
import ChannelBindingsVisitor from "./visitors/async-api-2/channel-bindings/index.js";
import ChannelItemVisitor from "./visitors/async-api-2/channel-item/index.js";
import ChannelItem$RefVisitor from "./visitors/async-api-2/channel-item/$RefVisitor.js";
import ChannelItemDescriptionVisitor from "./visitors/async-api-2/channel-item/DescriptionVisitor.js";
import ChannelItemServersVisitor from "./visitors/async-api-2/channel-item/ServersVisitor.js";
import ChannelItemBindingsVisitor from "./visitors/async-api-2/channel-item/BindingsVisitor.js";
import MessageBindingsVisitor from "./visitors/async-api-2/message-bindings/index.js";
import MessageExampleVisitor from "./visitors/async-api-2/message-example/index.js";
import MessageExampleHeadersVisitor from "./visitors/async-api-2/message-example/HeadersVisitor.js";
import MessageExamplePayloadVisitor from "./visitors/async-api-2/message-example/PayloadVisitor.js";
import MessageExampleNameVisitor from "./visitors/async-api-2/message-example/NameVisitor.js";
import MessageExampleSummaryVisitor from "./visitors/async-api-2/message-example/SummaryVisitor.js";
import MessageTraitVisitor from "./visitors/async-api-2/message-trait/index.js";
import MessageTraitMessageIdVisitor from "./visitors/async-api-2/message-trait/MessageIdVisitor.js";
import MessageTraitHeadersVisitor from "./visitors/async-api-2/message-trait/HeadersVisitor.js";
import MessageTraitCorrelationIdVisitor from "./visitors/async-api-2/message-trait/CorrelationIdVisitor.js";
import MessageTraitSchemaFormatVisitor from "./visitors/async-api-2/message-trait/SchemaFormatVisitor.js";
import MessageTraitContentTypeVisitor from "./visitors/async-api-2/message-trait/ContentTypeVisitor.js";
import MessageTraitNameVisitor from "./visitors/async-api-2/message-trait/NameVisitor.js";
import MessageTraitTitleVisitor from "./visitors/async-api-2/message-trait/TitleVisitor.js";
import MessageTraitSummaryVisitor from "./visitors/async-api-2/message-trait/SummaryVisitor.js";
import MessageTraitDescriptionVisitor from "./visitors/async-api-2/message-trait/DescriptionVisitor.js";
import MessageTraitBindingsVisitor from "./visitors/async-api-2/message-trait/BindingsVisitor.js";
import MessageTraitExamplesVisitor from "./visitors/async-api-2/message-trait/ExamplesVisitor.js";
import MessageVisitor from "./visitors/async-api-2/message/index.js";
import MessageMessageIdVisitor from "./visitors/async-api-2/message/MessageIdVisitor.js";
import MessageHeadersVisitor from "./visitors/async-api-2/message/HeadersVisitor.js";
import MessagePayloadVisitor from "./visitors/async-api-2/message/PayloadVisitor.js";
import MessageCorrelationIdVisitor from "./visitors/async-api-2/message/CorrelationIdVisitor.js";
import MessageSchemaFormatVisitor from "./visitors/async-api-2/message/SchemaFormatVisitor.js";
import MessageContentTypeVisitor from "./visitors/async-api-2/message/ContentTypeVisitor.js";
import MessageNameVisitor from "./visitors/async-api-2/message/NameVisitor.js";
import MessageTitleVisitor from "./visitors/async-api-2/message/TitleVisitor.js";
import MessageSummaryVisitor from "./visitors/async-api-2/message/SummaryVisitor.js";
import MessageDescriptionVisitor from "./visitors/async-api-2/message/DescriptionVisitor.js";
import MessageBindingsVisitor_ from "./visitors/async-api-2/message/BindingsVisitor.js";
import MessageExamplesVisitor from "./visitors/async-api-2/message/ExamplesVisitor.js";
import MessageTraitsVisitor from "./visitors/async-api-2/message/TraitsVisitor.js";
import OperationBindingsVisitor from "./visitors/async-api-2/operation-bindings/index.js";
import OperationTraitVisitor from "./visitors/async-api-2/operation-trait/index.js";
import OperationTraitOperationIdVisitor from "./visitors/async-api-2/operation-trait/OperationIdVisitor.js";
import OperationTraitSummaryVisitor from "./visitors/async-api-2/operation-trait/SummaryVisitor.js";
import OperationTraitDescriptionVisitor from "./visitors/async-api-2/operation-trait/DescriptionVisitor.js";
import OperationTraitSecurityVisitor from "./visitors/async-api-2/operation-trait/SecurityVisitor.js";
import OperationTraitBindingsVisitor from "./visitors/async-api-2/operation-trait/BindingsVisitor.js";
/**
 * Binding elements.
 */
// AMQP 0-9-1
import AmqpChannelBindingVisitor from "./visitors/async-api-2/bindings/amqp/channel-binding/index.js";
import AmqpMessageBindingVisitor from "./visitors/async-api-2/bindings/amqp/message-binding/index.js";
import AmqpOperationBindingVisitor from "./visitors/async-api-2/bindings/amqp/operation-binding/index.js";
import AmqpServerBindingVisitor from "./visitors/async-api-2/bindings/amqp/server-binding/index.js"; // AMQP 1.0
import Amqp1ChannelBindingVisitor from "./visitors/async-api-2/bindings/amqp1/channel-binding/index.js";
import Amqp1MessageBindingVisitor from "./visitors/async-api-2/bindings/amqp1/message-binding/index.js";
import Amqp1OperationBindingVisitor from "./visitors/async-api-2/bindings/amqp1/operation-binding/index.js";
import Amqp1ServerBindingVisitor from "./visitors/async-api-2/bindings/amqp1/server-binding/index.js"; // Anypoint MQ
import AnypointmqChannelBindingVisitor from "./visitors/async-api-2/bindings/anypointmq/channel-binding/index.js";
import AnypointmqMessageBindingVisitor from "./visitors/async-api-2/bindings/anypointmq/message-binding/index.js";
import AnypointmqOperationBindingVisitor from "./visitors/async-api-2/bindings/anypointmq/operation-binding/index.js";
import AnypointmqServerBindingVisitor from "./visitors/async-api-2/bindings/anypointmq/server-binding/index.js"; // HTTP
import HttpChannelBindingVisitor from "./visitors/async-api-2/bindings/http/channel-binding/index.js";
import HttpMessageBindingVisitor from "./visitors/async-api-2/bindings/http/message-binding/index.js";
import HttpOperationBindingVisitor from "./visitors/async-api-2/bindings/http/operation-binding/index.js";
import HttpServerBindingVisitor from "./visitors/async-api-2/bindings/http/server-binding/index.js"; // Google Cloud Pub/Sub
import GooglepubsubChannelBindingVisitor from "./visitors/async-api-2/bindings/googlepubsub/channel-binding/index.js";
import GooglepubsubMessageBindingVisitor from "./visitors/async-api-2/bindings/googlepubsub/message-binding/index.js";
import GooglepubsubOperationBindingVisitor from "./visitors/async-api-2/bindings/googlepubsub/operation-binding/index.js";
import GooglepubsubServerBindingVisitor from "./visitors/async-api-2/bindings/googlepubsub/server-binding/index.js"; // IBM MQ
import IbmmqChannelBindingVisitor from "./visitors/async-api-2/bindings/ibmmq/channel-binding/index.js";
import IbmmqMessageBindingVisitor from "./visitors/async-api-2/bindings/ibmmq/message-binding/index.js";
import IbmmqOperationBindingVisitor from "./visitors/async-api-2/bindings/ibmmq/operation-binding/index.js";
import IbmmqServerBindingVisitor from "./visitors/async-api-2/bindings/ibmmq/server-binding/index.js"; // JMS
import JmsChannelBindingVisitor from "./visitors/async-api-2/bindings/jms/channel-binding/index.js";
import JmsMessageBindingVisitor from "./visitors/async-api-2/bindings/jms/message-binding/index.js";
import JmsOperationBindingVisitor from "./visitors/async-api-2/bindings/jms/operation-binding/index.js";
import JmsServerBindingVisitor from "./visitors/async-api-2/bindings/jms/server-binding/index.js"; // Kafka
import KafkaChannelBindingVisitor from "./visitors/async-api-2/bindings/kafka/channel-binding/index.js";
import KafkaMessageBindingVisitor from "./visitors/async-api-2/bindings/kafka/message-binding/index.js";
import KafkaOperationBindingVisitor from "./visitors/async-api-2/bindings/kafka/operation-binding/index.js";
import KafkaServerBindingVisitor from "./visitors/async-api-2/bindings/kafka/server-binding/index.js"; // Mercure
import MercureChannelBindingVisitor from "./visitors/async-api-2/bindings/mercure/channel-binding/index.js";
import MercureMessageBindingVisitor from "./visitors/async-api-2/bindings/mercure/message-binding/index.js";
import MercureOperationBindingVisitor from "./visitors/async-api-2/bindings/mercure/operation-binding/index.js";
import MercureServerBindingVisitor from "./visitors/async-api-2/bindings/mercure/server-binding/index.js"; // MQTT
import MqttChannelBindingVisitor from "./visitors/async-api-2/bindings/mqtt/channel-binding/index.js";
import MqttMessageBindingVisitor from "./visitors/async-api-2/bindings/mqtt/message-binding/index.js";
import MqttOperationBindingVisitor from "./visitors/async-api-2/bindings/mqtt/operation-binding/index.js";
import MqttServerBindingVisitor from "./visitors/async-api-2/bindings/mqtt/server-binding/index.js"; // MQTT 5
import Mqtt5ChannelBindingVisitor from "./visitors/async-api-2/bindings/mqtt5/channel-binding/index.js";
import Mqtt5MessageBindingVisitor from "./visitors/async-api-2/bindings/mqtt5/message-binding/index.js";
import Mqtt5OperationBindingVisitor from "./visitors/async-api-2/bindings/mqtt5/operation-binding/index.js";
import Mqtt5ServerBindingVisitor from "./visitors/async-api-2/bindings/mqtt5/server-binding/index.js"; // NATS
import NatsChannelBindingVisitor from "./visitors/async-api-2/bindings/nats/channel-binding/index.js";
import NatsMessageBindingVisitor from "./visitors/async-api-2/bindings/nats/message-binding/index.js";
import NatsOperationBindingVisitor from "./visitors/async-api-2/bindings/nats/operation-binding/index.js";
import NatsServerBindingVisitor from "./visitors/async-api-2/bindings/nats/server-binding/index.js"; // Pulsar
import PulsarChannelBindingVisitor from "./visitors/async-api-2/bindings/pulsar/channel-binding/index.js";
import PulsarMessageBindingVisitor from "./visitors/async-api-2/bindings/pulsar/message-binding/index.js";
import PulsarOperationBindingVisitor from "./visitors/async-api-2/bindings/pulsar/operation-binding/index.js";
import PulsarServerBindingVisitor from "./visitors/async-api-2/bindings/pulsar/server-binding/index.js"; // Redis
import RedisChannelBindingVisitor from "./visitors/async-api-2/bindings/redis/channel-binding/index.js";
import RedisMessageBindingVisitor from "./visitors/async-api-2/bindings/redis/message-binding/index.js";
import RedisOperationBindingVisitor from "./visitors/async-api-2/bindings/redis/operation-binding/index.js";
import RedisServerBindingVisitor from "./visitors/async-api-2/bindings/redis/server-binding/index.js"; // SNS
import SnsChannelBindingVisitor from "./visitors/async-api-2/bindings/sns/channel-binding/index.js";
import SnsMessageBindingVisitor from "./visitors/async-api-2/bindings/sns/message-binding/index.js";
import SnsOperationBindingVisitor from "./visitors/async-api-2/bindings/sns/operation-binding/index.js";
import SnsServerBindingVisitor from "./visitors/async-api-2/bindings/sns/server-binding/index.js"; // Solace
import SolaceChannelBindingVisitor from "./visitors/async-api-2/bindings/solace/channel-binding/index.js";
import SolaceMessageBindingVisitor from "./visitors/async-api-2/bindings/solace/message-binding/index.js";
import SolaceOperationBindingVisitor from "./visitors/async-api-2/bindings/solace/operation-binding/index.js";
import SolaceServerBindingVisitor from "./visitors/async-api-2/bindings/solace/server-binding/index.js"; // SQS
import SqsChannelBindingVisitor from "./visitors/async-api-2/bindings/sqs/channel-binding/index.js";
import SqsMessageBindingVisitor from "./visitors/async-api-2/bindings/sqs/message-binding/index.js";
import SqsOperationBindingVisitor from "./visitors/async-api-2/bindings/sqs/operation-binding/index.js";
import SqsServerBindingVisitor from "./visitors/async-api-2/bindings/sqs/server-binding/index.js"; // STOMP
import StompChannelBindingVisitor from "./visitors/async-api-2/bindings/stomp/channel-binding/index.js";
import StompMessageBindingVisitor from "./visitors/async-api-2/bindings/stomp/message-binding/index.js";
import StompOperationBindingVisitor from "./visitors/async-api-2/bindings/stomp/operation-binding/index.js";
import StompServerBindingVisitor from "./visitors/async-api-2/bindings/stomp/server-binding/index.js"; // WebSocket
import WebSocketChannelBindingVisitor from "./visitors/async-api-2/bindings/ws/channel-binding/index.js";
import WebSocketMessageBindingVisitor from "./visitors/async-api-2/bindings/ws/message-binding/index.js";
import WebSocketOperationBindingVisitor from "./visitors/async-api-2/bindings/ws/operation-binding/index.js";
import WebSocketServerBindingVisitor from "./visitors/async-api-2/bindings/ws/server-binding/index.js";
/**
 * Specification object allows us to have complete control over visitors
 * when traversing the ApiDOM.
 * Specification also allows us to create amended refractors from
 * existing ones by manipulating it.
 *
 * Note: Specification object allows to use absolute internal JSON pointers.
 */
const ReferenceSpecification = {
  $visitor: ReferenceVisitor,
  fixedFields: {
    $ref: Reference$RefVisitor
  }
};
const SchemaSpecification = {
  $visitor: SchemaVisitor,
  fixedFields: _objectSpread(_objectSpread({}, schemaInheritedFixedFields), {}, {
    // validation vocabulary
    // validation keywords for Applying Subschemas With Boolean Logic
    allOf: SchemaAllOfVisitor,
    anyOf: SchemaAnyOfVisitor,
    oneOf: SchemaOneOfVisitor,
    // validation Keywords for Arrays
    items: SchemaItemsVisitor,
    // validation Keywords for Objects
    properties: SchemaPropertiesVisitor,
    patternProperties: SchemaPatternPropertiesVisitor,
    dependencies: SchemaDependenciesVisitor,
    // validation Vocabulary for Schema Re-Use With "definitions"
    definitions: SchemaDefinitionsVisitor,
    // AsyncAPI vocabulary
    discriminator: SchemaDiscriminatorVisitor,
    externalDocs: {
      $ref: '#/visitors/document/objects/ExternalDocumentation'
    },
    deprecated: SchemaDeprecatedVisitor
  })
};
const specification = {
  visitors: {
    value: FallbackVisitor,
    document: {
      objects: {
        /**
         * AsyncApi >= 2.0.0 <=2.6.0 specification elements.
         */
        AsyncApi: {
          $visitor: AsyncApi2Visitor,
          fixedFields: {
            asyncapi: {
              $ref: '#/visitors/document/objects/AsyncApiVersion'
            },
            id: {
              $ref: '#/visitors/document/objects/Identifier'
            },
            info: {
              $ref: '#/visitors/document/objects/Info'
            },
            servers: {
              $ref: '#/visitors/document/objects/Servers'
            },
            defaultContentType: {
              $ref: '#/visitors/document/objects/DefaultContentType'
            },
            channels: {
              $ref: '#/visitors/document/objects/Channels'
            },
            components: {
              $ref: '#/visitors/document/objects/Components'
            },
            tags: {
              $ref: '#/visitors/document/objects/Tags'
            },
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            }
          }
        },
        AsyncApiVersion: {
          $visitor: AsyncApiVersionVisitor
        },
        Identifier: {
          $visitor: IdentifierVisitor
        },
        Info: {
          $visitor: InfoVisitor,
          fixedFields: {
            title: InfoTitleVisitor,
            description: InfoDescriptionVisitor,
            termsOfService: InfoTermsOfServiceVisitor,
            version: InfoVersionVisitor,
            contact: {
              $ref: '#/visitors/document/objects/Contact'
            },
            license: {
              $ref: '#/visitors/document/objects/License'
            }
          }
        },
        Contact: {
          $visitor: ContactVisitor,
          fixedFields: {
            name: ContactNameVisitor,
            url: ContactUrlVisitor,
            email: ContactEmailVisitor
          }
        },
        License: {
          $visitor: LicenseVisitor,
          fixedFields: {
            name: LicenseNameVisitor,
            url: LicenseUrlVisitor
          }
        },
        Servers: {
          $visitor: ServersVisitor
        },
        Server: {
          $visitor: ServerVisitor,
          fixedFields: {
            url: ServerUrlVisitor,
            protocol: ServerProtocolVisitor,
            protocolVersion: ServerProtocolVersionVisitor,
            description: ServerDescriptionVisitor,
            variables: ServerVariablesVisitor,
            security: ServerSecurityVisitor,
            tags: {
              $ref: '#/visitors/document/objects/Tags'
            },
            bindings: ServerBindingsVisitor_
          }
        },
        ServerVariable: {
          $visitor: ServerVariableVisitor,
          fixedFields: {
            enum: ServerVariableEnumVisitor,
            default: ServerVariableDefaultVisitor,
            description: ServerVariableDescriptionVisitor,
            examples: ServerVariableExamplesVisitor
          }
        },
        DefaultContentType: {
          $visitor: DefaultContentTypeVisitor
        },
        Channels: {
          $visitor: ChannelsVisitor
        },
        ChannelItem: {
          $visitor: ChannelItemVisitor,
          fixedFields: {
            $ref: ChannelItem$RefVisitor,
            description: ChannelItemDescriptionVisitor,
            servers: ChannelItemServersVisitor,
            subscribe: {
              $ref: '#/visitors/document/objects/Operation'
            },
            publish: {
              $ref: '#/visitors/document/objects/Operation'
            },
            parameters: {
              $ref: '#/visitors/document/objects/Parameters'
            },
            bindings: ChannelItemBindingsVisitor
          }
        },
        Operation: {
          $visitor: OperationVisitor,
          fixedFields: {
            operationId: OperationOperationIdVisitor,
            summary: OperationSummaryVisitor,
            description: OperationDescriptionVisitor,
            security: OperationSecurityVisitor,
            tags: {
              $ref: '#/visitors/document/objects/Tags'
            },
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            },
            bindings: OperationBindingsVisitor_,
            traits: OperationTraitsVisitor,
            message: OperationMessageVisitor
          }
        },
        OperationTrait: {
          $visitor: OperationTraitVisitor,
          fixedFields: {
            operationId: OperationTraitOperationIdVisitor,
            summary: OperationTraitSummaryVisitor,
            description: OperationTraitDescriptionVisitor,
            security: OperationTraitSecurityVisitor,
            tags: {
              $ref: '#/visitors/document/objects/Tags'
            },
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            },
            bindings: OperationTraitBindingsVisitor
          }
        },
        Message: {
          $visitor: MessageVisitor,
          fixedFields: {
            messageId: MessageMessageIdVisitor,
            headers: MessageHeadersVisitor,
            payload: MessagePayloadVisitor,
            correlationId: MessageCorrelationIdVisitor,
            schemaFormat: MessageSchemaFormatVisitor,
            contentType: MessageContentTypeVisitor,
            name: MessageNameVisitor,
            title: MessageTitleVisitor,
            summary: MessageSummaryVisitor,
            description: MessageDescriptionVisitor,
            tags: {
              $ref: '#/visitors/document/objects/Tags'
            },
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            },
            bindings: MessageBindingsVisitor_,
            examples: MessageExamplesVisitor,
            traits: MessageTraitsVisitor
          }
        },
        MessageTrait: {
          $visitor: MessageTraitVisitor,
          fixedFields: {
            messageId: MessageTraitMessageIdVisitor,
            headers: MessageTraitHeadersVisitor,
            correlationId: MessageTraitCorrelationIdVisitor,
            schemaFormat: MessageTraitSchemaFormatVisitor,
            contentType: MessageTraitContentTypeVisitor,
            name: MessageTraitNameVisitor,
            title: MessageTraitTitleVisitor,
            summary: MessageTraitSummaryVisitor,
            description: MessageTraitDescriptionVisitor,
            tags: {
              $ref: '#/visitors/document/objects/Tags'
            },
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            },
            bindings: MessageTraitBindingsVisitor,
            examples: MessageTraitExamplesVisitor
          }
        },
        MessageExample: {
          $visitor: MessageExampleVisitor,
          fixedFields: {
            headers: MessageExampleHeadersVisitor,
            payload: MessageExamplePayloadVisitor,
            name: MessageExampleNameVisitor,
            summary: MessageExampleSummaryVisitor
          }
        },
        Tags: {
          $visitor: TagsVisitor
        },
        Tag: {
          $visitor: TagVisitor,
          fixedFields: {
            name: TagNameVisitor,
            description: TagDescriptionVisitor,
            externalDocs: {
              $ref: '#/visitors/document/objects/ExternalDocumentation'
            }
          }
        },
        ExternalDocumentation: {
          $visitor: ExternalDocumentationVisitor,
          fixedFields: {
            description: ExternalDocumentationDescriptionVisitor,
            url: ExternalDocumentationUrlVisitor
          }
        },
        Components: {
          $visitor: ComponentsVisitor,
          fixedFields: {
            schemas: ComponentsSchemasVisitor,
            servers: ComponentsServersVisitor,
            serverVariables: ComponentsServerVariablesVisitor,
            channels: ComponentsChannelsVisitor,
            messages: ComponentsMessagesVisitor,
            securitySchemes: ComponentsSecuritySchemesVisitor,
            parameters: ComponentsParametersVisitor,
            correlationIds: ComponentsCorrelationIdsVisitor,
            operationTraits: ComponentsOperationTraitsVisitor,
            messageTraits: ComponentsMessageTraitsVisitor,
            serverBindings: ComponentsServerBindingsVisitor,
            channelBindings: ComponentsChannelBindingsVisitor,
            operationBindings: ComponentsOperationBindingsVisitor,
            messageBindings: ComponentsMessageBindingsVisitor
          }
        },
        JSONReference: ReferenceSpecification,
        Reference: ReferenceSpecification,
        JSONSchema: SchemaSpecification,
        Schema: SchemaSpecification,
        LinkDescription: JSONSchemaDraft7Specification.visitors.document.objects.LinkDescription,
        SecurityScheme: {
          $visitor: SecuritySchemeVisitor,
          fixedFields: {
            type: SecuritySchemeTypeVisitor,
            description: SecuritySchemeDescriptionVisitor,
            name: SecuritySchemeNameVisitor,
            in: SecuritySchemeInVisitor,
            scheme: SecuritySchemeSchemeVisitor,
            bearerFormat: SecuritySchemeBearerFormatVisitor,
            flows: {
              $ref: '#/visitors/document/objects/OAuthFlows'
            },
            openIdConnectUrl: SecuritySchemeOpenIdConnectUrlVisitor
          }
        },
        SecurityRequirement: {
          $visitor: SecurityRequirementVisitor
        },
        OAuthFlows: {
          $visitor: OAuthFlowsVisitor,
          fixedFields: {
            implicit: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            },
            password: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            },
            clientCredentials: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            },
            authorizationCode: {
              $ref: '#/visitors/document/objects/OAuthFlow'
            }
          }
        },
        OAuthFlow: {
          $visitor: OAuthFlowVisitor,
          fixedFields: {
            authorizationUrl: OAuthFlowAuthorizationUrlVisitor,
            tokenUrl: OAuthFlowTokenUrlVisitor,
            refreshUrl: OAuthFlowRefreshUrlVisitor,
            scopes: OAuthFlowScopesVisitor
          }
        },
        ServerBindings: {
          $visitor: ServerBindingsVisitor,
          fixedFields: {
            http: {
              $ref: '#/visitors/document/objects/bindings/http/ServerBinding'
            },
            ws: {
              $ref: '#/visitors/document/objects/bindings/ws/ServerBinding'
            },
            kafka: {
              $ref: '#/visitors/document/objects/bindings/kafka/ServerBinding'
            },
            anypointmq: {
              $ref: '#/visitors/document/objects/bindings/anypointmq/ServerBinding'
            },
            amqp: {
              $ref: '#/visitors/document/objects/bindings/amqp/ServerBinding'
            },
            amqp1: {
              $ref: '#/visitors/document/objects/bindings/amqp1/ServerBinding'
            },
            mqtt: {
              $ref: '#/visitors/document/objects/bindings/mqtt/ServerBinding'
            },
            mqtt5: {
              $ref: '#/visitors/document/objects/bindings/mqtt5/ServerBinding'
            },
            nats: {
              $ref: '#/visitors/document/objects/bindings/nats/ServerBinding'
            },
            jms: {
              $ref: '#/visitors/document/objects/bindings/jms/ServerBinding'
            },
            sns: {
              $ref: '#/visitors/document/objects/bindings/sns/ServerBinding'
            },
            solace: {
              $ref: '#/visitors/document/objects/bindings/solace/ServerBinding'
            },
            sqs: {
              $ref: '#/visitors/document/objects/bindings/sqs/ServerBinding'
            },
            stomp: {
              $ref: '#/visitors/document/objects/bindings/stomp/ServerBinding'
            },
            redis: {
              $ref: '#/visitors/document/objects/bindings/redis/ServerBinding'
            },
            mercure: {
              $ref: '#/visitors/document/objects/bindings/mercure/ServerBinding'
            },
            ibmmq: {
              $ref: '#/visitors/document/objects/bindings/ibmmq/ServerBinding'
            },
            googlepubsub: {
              $ref: '#/visitors/document/objects/bindings/googlepubsub/ServerBinding'
            },
            pulsar: {
              $ref: '#/visitors/document/objects/bindings/pulsar/ServerBinding'
            }
          }
        },
        Parameters: {
          $visitor: ParametersVisitor
        },
        Parameter: {
          $visitor: ParameterVisitor,
          fixedFields: {
            description: ParameterDescriptionVisitor,
            schema: ParameterSchemaVisitor,
            location: ParameterLocationVisitor
          }
        },
        ChannelBindings: {
          $visitor: ChannelBindingsVisitor,
          fixedFields: {
            http: {
              $ref: '#/visitors/document/objects/bindings/http/ChannelBinding'
            },
            ws: {
              $ref: '#/visitors/document/objects/bindings/ws/ChannelBinding'
            },
            kafka: {
              $ref: '#/visitors/document/objects/bindings/kafka/ChannelBinding'
            },
            anypointmq: {
              $ref: '#/visitors/document/objects/bindings/anypointmq/ChannelBinding'
            },
            amqp: {
              $ref: '#/visitors/document/objects/bindings/amqp/ChannelBinding'
            },
            amqp1: {
              $ref: '#/visitors/document/objects/bindings/amqp1/ChannelBinding'
            },
            mqtt: {
              $ref: '#/visitors/document/objects/bindings/mqtt/ChannelBinding'
            },
            mqtt5: {
              $ref: '#/visitors/document/objects/bindings/mqtt5/ChannelBinding'
            },
            nats: {
              $ref: '#/visitors/document/objects/bindings/nats/ChannelBinding'
            },
            jms: {
              $ref: '#/visitors/document/objects/bindings/jms/ChannelBinding'
            },
            sns: {
              $ref: '#/visitors/document/objects/bindings/sns/ChannelBinding'
            },
            solace: {
              $ref: '#/visitors/document/objects/bindings/solace/ChannelBinding'
            },
            sqs: {
              $ref: '#/visitors/document/objects/bindings/sqs/ChannelBinding'
            },
            stomp: {
              $ref: '#/visitors/document/objects/bindings/stomp/ChannelBinding'
            },
            redis: {
              $ref: '#/visitors/document/objects/bindings/redis/ChannelBinding'
            },
            mercure: {
              $ref: '#/visitors/document/objects/bindings/mercure/ChannelBinding'
            },
            ibmmq: {
              $ref: '#/visitors/document/objects/bindings/ibmmq/ChannelBinding'
            },
            googlepubsub: {
              $ref: '#/visitors/document/objects/bindings/googlepubsub/ChannelBinding'
            },
            pulsar: {
              $ref: '#/visitors/document/objects/bindings/pulsar/ChannelBinding'
            }
          }
        },
        OperationBindings: {
          $visitor: OperationBindingsVisitor,
          fixedFields: {
            http: {
              $ref: '#/visitors/document/objects/bindings/http/OperationBinding'
            },
            ws: {
              $ref: '#/visitors/document/objects/bindings/ws/OperationBinding'
            },
            kafka: {
              $ref: '#/visitors/document/objects/bindings/kafka/OperationBinding'
            },
            anypointmq: {
              $ref: '#/visitors/document/objects/bindings/anypointmq/OperationBinding'
            },
            amqp: {
              $ref: '#/visitors/document/objects/bindings/amqp/OperationBinding'
            },
            amqp1: {
              $ref: '#/visitors/document/objects/bindings/amqp1/OperationBinding'
            },
            mqtt: {
              $ref: '#/visitors/document/objects/bindings/mqtt/OperationBinding'
            },
            mqtt5: {
              $ref: '#/visitors/document/objects/bindings/mqtt5/OperationBinding'
            },
            nats: {
              $ref: '#/visitors/document/objects/bindings/nats/OperationBinding'
            },
            jms: {
              $ref: '#/visitors/document/objects/bindings/jms/OperationBinding'
            },
            sns: {
              $ref: '#/visitors/document/objects/bindings/sns/OperationBinding'
            },
            solace: {
              $ref: '#/visitors/document/objects/bindings/solace/OperationBinding'
            },
            sqs: {
              $ref: '#/visitors/document/objects/bindings/sqs/OperationBinding'
            },
            stomp: {
              $ref: '#/visitors/document/objects/bindings/stomp/OperationBinding'
            },
            redis: {
              $ref: '#/visitors/document/objects/bindings/redis/OperationBinding'
            },
            mercure: {
              $ref: '#/visitors/document/objects/bindings/mercure/OperationBinding'
            },
            googlepubsub: {
              $ref: '#/visitors/document/objects/bindings/googlepubsub/OperationBinding'
            },
            ibmmq: {
              $ref: '#/visitors/document/objects/bindings/ibmmq/OperationBinding'
            },
            pulsar: {
              $ref: '#/visitors/document/objects/bindings/pulsar/OperationBinding'
            }
          }
        },
        MessageBindings: {
          $visitor: MessageBindingsVisitor,
          fixedFields: {
            http: {
              $ref: '#/visitors/document/objects/bindings/http/MessageBinding'
            },
            ws: {
              $ref: '#/visitors/document/objects/bindings/ws/MessageBinding'
            },
            kafka: {
              $ref: '#/visitors/document/objects/bindings/kafka/MessageBinding'
            },
            anypointmq: {
              $ref: '#/visitors/document/objects/bindings/anypointmq/MessageBinding'
            },
            amqp: {
              $ref: '#/visitors/document/objects/bindings/amqp/MessageBinding'
            },
            amqp1: {
              $ref: '#/visitors/document/objects/bindings/amqp1/MessageBinding'
            },
            mqtt: {
              $ref: '#/visitors/document/objects/bindings/mqtt/MessageBinding'
            },
            mqtt5: {
              $ref: '#/visitors/document/objects/bindings/mqtt5/MessageBinding'
            },
            nats: {
              $ref: '#/visitors/document/objects/bindings/nats/MessageBinding'
            },
            jms: {
              $ref: '#/visitors/document/objects/bindings/jms/MessageBinding'
            },
            sns: {
              $ref: '#/visitors/document/objects/bindings/sns/MessageBinding'
            },
            solace: {
              $ref: '#/visitors/document/objects/bindings/solace/MessageBinding'
            },
            sqs: {
              $ref: '#/visitors/document/objects/bindings/sqs/MessageBinding'
            },
            stomp: {
              $ref: '#/visitors/document/objects/bindings/stomp/MessageBinding'
            },
            redis: {
              $ref: '#/visitors/document/objects/bindings/redis/MessageBinding'
            },
            mercure: {
              $ref: '#/visitors/document/objects/bindings/mercure/MessageBinding'
            },
            ibmmq: {
              $ref: '#/visitors/document/objects/bindings/ibmmq/MessageBinding'
            },
            googlepubsub: {
              $ref: '#/visitors/document/objects/bindings/googlepubsub/MessageBinding'
            },
            pulsar: {
              $ref: '#/visitors/document/objects/bindings/pulsar/MessageBinding'
            }
          }
        },
        CorrelationID: {
          $visitor: CorrelationIDVisitor,
          fixedFields: {
            description: CorrelationIDDescriptionVisitor,
            location: CorrelationIDLocationVisitor
          }
        },
        bindings: {
          http: {
            ServerBinding: {
              $visitor: HttpServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: HttpChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: HttpOperationBindingVisitor,
              fixedFields: {
                type: {
                  $ref: '#/visitors/value'
                },
                method: {
                  $ref: '#/visitors/value'
                },
                query: SchemaOrReferenceVisitor,
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: HttpMessageBindingVisitor,
              fixedFields: {
                headers: SchemaOrReferenceVisitor,
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            }
          },
          ws: {
            ServerBinding: {
              $visitor: WebSocketServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: WebSocketChannelBindingVisitor,
              fixedFields: {
                method: {
                  $ref: '#/visitors/value'
                },
                query: SchemaOrReferenceVisitor,
                headers: SchemaOrReferenceVisitor,
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: WebSocketOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: WebSocketMessageBindingVisitor
            }
          },
          kafka: {
            ServerBinding: {
              $visitor: KafkaServerBindingVisitor,
              fixedFields: {
                schemaRegistryUrl: {
                  $ref: '#/visitors/value'
                },
                schemaRegistryVendor: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            ChannelBinding: {
              $visitor: KafkaChannelBindingVisitor,
              fixedFields: {
                topic: {
                  $ref: '#/visitors/value'
                },
                partitions: {
                  $ref: '#/visitors/value'
                },
                replicas: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: KafkaOperationBindingVisitor,
              fixedFields: {
                groupId: SchemaOrReferenceVisitor,
                clientId: SchemaOrReferenceVisitor,
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: KafkaMessageBindingVisitor,
              fixedFields: {
                key: SchemaOrReferenceVisitor,
                schemaIdLocation: {
                  $ref: '#/visitors/value'
                },
                schemaIdPayloadEncoding: {
                  $ref: '#/visitors/value'
                },
                schemaLookupStrategy: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            }
          },
          anypointmq: {
            ServerBinding: {
              $visitor: AnypointmqServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: AnypointmqChannelBindingVisitor,
              fixedFields: {
                destination: {
                  $ref: '#/visitors/value'
                },
                destinationType: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: AnypointmqOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: AnypointmqMessageBindingVisitor,
              fixedFields: {
                headers: SchemaOrReferenceVisitor,
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            }
          },
          amqp: {
            ServerBinding: {
              $visitor: AmqpServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: AmqpChannelBindingVisitor,
              fixedFields: {
                is: {
                  $ref: '#/visitors/value'
                },
                exchange: {
                  $ref: '#/visitors/value'
                },
                queue: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: AmqpOperationBindingVisitor,
              fixedFields: {
                expiration: {
                  $ref: '#/visitors/value'
                },
                userId: {
                  $ref: '#/visitors/value'
                },
                cc: {
                  $ref: '#/visitors/value'
                },
                priority: {
                  $ref: '#/visitors/value'
                },
                deliveryMode: {
                  $ref: '#/visitors/value'
                },
                mandatory: {
                  $ref: '#/visitors/value'
                },
                bcc: {
                  $ref: '#/visitors/value'
                },
                replyTo: {
                  $ref: '#/visitors/value'
                },
                timestamp: {
                  $ref: '#/visitors/value'
                },
                ack: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: AmqpMessageBindingVisitor,
              fixedFields: {
                contentEncoding: {
                  $ref: '#/visitors/value'
                },
                messageType: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            }
          },
          amqp1: {
            ServerBinding: {
              $visitor: Amqp1ServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: Amqp1ChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: Amqp1OperationBindingVisitor
            },
            MessageBinding: {
              $visitor: Amqp1MessageBindingVisitor
            }
          },
          mqtt: {
            ServerBinding: {
              $visitor: MqttServerBindingVisitor,
              fixedFields: {
                clientId: {
                  $ref: '#/visitors/value'
                },
                cleanSession: {
                  $ref: '#/visitors/value'
                },
                lastWill: {
                  $ref: '#/visitors/value'
                },
                keepAlive: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            ChannelBinding: {
              $visitor: MqttChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: MqttOperationBindingVisitor,
              fixedFields: {
                qos: {
                  $ref: '#/visitors/value'
                },
                retain: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: MqttMessageBindingVisitor,
              fixedFields: {
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            }
          },
          mqtt5: {
            ServerBinding: {
              $visitor: Mqtt5ServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: Mqtt5ChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: Mqtt5OperationBindingVisitor
            },
            MessageBinding: {
              $visitor: Mqtt5MessageBindingVisitor
            }
          },
          nats: {
            ServerBinding: {
              $visitor: NatsServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: NatsChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: NatsOperationBindingVisitor,
              fixedFields: {
                queue: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: NatsMessageBindingVisitor
            }
          },
          pulsar: {
            ServerBinding: {
              $visitor: PulsarServerBindingVisitor,
              fixedFields: {
                tenant: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            ChannelBinding: {
              $visitor: PulsarChannelBindingVisitor,
              fixedFields: {
                namespace: {
                  $ref: '#/visitors/value'
                },
                persistence: {
                  $ref: '#/visitors/value'
                },
                compaction: {
                  $ref: '#/visitors/value'
                },
                'geo-replication': {
                  $ref: '#/visitors/value'
                },
                retention: {
                  $ref: '#/visitors/value'
                },
                ttl: {
                  $ref: '#/visitors/value'
                },
                deduplication: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: PulsarOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: PulsarMessageBindingVisitor
            }
          },
          jms: {
            ServerBinding: {
              $visitor: JmsServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: JmsChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: JmsOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: JmsMessageBindingVisitor
            }
          },
          sns: {
            ServerBinding: {
              $visitor: SnsServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: SnsChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: SnsOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: SnsMessageBindingVisitor
            }
          },
          solace: {
            ServerBinding: {
              $visitor: SolaceServerBindingVisitor,
              fixedFields: {
                bindingVersion: {
                  $ref: '#/visitors/value'
                },
                msgVpn: {
                  $ref: '#/visitors/value'
                }
              }
            },
            ChannelBinding: {
              $visitor: SolaceChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: SolaceOperationBindingVisitor,
              fixedFields: {
                bindingVersion: {
                  $ref: '#/visitors/value'
                },
                destinations: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: SolaceMessageBindingVisitor
            }
          },
          sqs: {
            ServerBinding: {
              $visitor: SqsServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: SqsChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: SqsOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: SqsMessageBindingVisitor
            }
          },
          stomp: {
            ServerBinding: {
              $visitor: StompServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: StompChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: StompOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: StompMessageBindingVisitor
            }
          },
          redis: {
            ServerBinding: {
              $visitor: RedisServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: RedisChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: RedisOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: RedisMessageBindingVisitor
            }
          },
          mercure: {
            ServerBinding: {
              $visitor: MercureServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: MercureChannelBindingVisitor
            },
            OperationBinding: {
              $visitor: MercureOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: MercureMessageBindingVisitor
            }
          },
          googlepubsub: {
            ServerBinding: {
              $visitor: GooglepubsubServerBindingVisitor
            },
            ChannelBinding: {
              $visitor: GooglepubsubChannelBindingVisitor,
              fixedFields: {
                bindingVersion: {
                  $ref: '#/visitors/value'
                },
                labels: {
                  $ref: '#/visitors/value'
                },
                messageRetentionDuration: {
                  $ref: '#/visitors/value'
                },
                messageStoragePolicy: {
                  $ref: '#/visitors/value'
                },
                schemaSettings: {
                  $ref: '#/visitors/value'
                },
                topic: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: GooglepubsubOperationBindingVisitor
            },
            MessageBinding: {
              $visitor: GooglepubsubMessageBindingVisitor,
              fixedFields: {
                bindingVersion: {
                  $ref: '#/visitors/value'
                },
                attributes: {
                  $ref: '#/visitors/value'
                },
                orderingKey: {
                  $ref: '#/visitors/value'
                },
                schema: {
                  $ref: '#/visitors/value'
                }
              }
            }
          },
          ibmmq: {
            ServerBinding: {
              $visitor: IbmmqServerBindingVisitor,
              fixedFields: {
                groupId: {
                  $ref: '#/visitors/value'
                },
                ccdtQueueManagerName: {
                  $ref: '#/visitors/value'
                },
                cipherSpec: {
                  $ref: '#/visitors/value'
                },
                multiEndpointServer: {
                  $ref: '#/visitors/value'
                },
                heartBeatInterval: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            ChannelBinding: {
              $visitor: IbmmqChannelBindingVisitor,
              fixedFields: {
                destinationType: {
                  $ref: '#/visitors/value'
                },
                queue: {
                  $ref: '#/visitors/value'
                },
                topic: {
                  $ref: '#/visitors/value'
                },
                maxMsgLength: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            MessageBinding: {
              $visitor: IbmmqMessageBindingVisitor,
              fixedFields: {
                type: {
                  $ref: '#/visitors/value'
                },
                headers: {
                  $ref: '#/visitors/value'
                },
                description: {
                  $ref: '#/visitors/value'
                },
                expiry: {
                  $ref: '#/visitors/value'
                },
                bindingVersion: {
                  $ref: '#/visitors/value'
                }
              }
            },
            OperationBinding: {
              $visitor: IbmmqOperationBindingVisitor
            }
          }
        }
      },
      extension: {
        $visitor: SpecificationExtensionVisitor
      }
    }
  }
};
export default specification;